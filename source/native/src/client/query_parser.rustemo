QUERY: CHAIN SORT_PAIR* ;

CHAIN: CHAIN_BODY sym_open_curly CHAIN_ACTION* sym_end_curly ;
CHAIN_BODY: ROOT? STEP* ;

ROOT: VAL | ROOT_SEARCH ;
ROOT_SEARCH: kw_search STR_VAL ;

STEP: STEP_MOVE_UP | STEP_MOVE_DOWN | STEP_RECURSE | STEP_JUNCT_AND | STEP_JUNCT_OR ;
STEP_MOVE_DOWN: sym_move_down STR_VAL FILTER? FIRST? ;
STEP_MOVE_UP: sym_move_up STR_VAL FILTER? FIRST? ;
STEP_RECURSE: sym_open_recurse CHAIN_BODY sym_end_paren FIRST? ;
STEP_JUNCT_AND: sym_open_junct_and JUNCT_SUBCHAIN+ sym_end_paren ;
STEP_JUNCT_OR: sym_open_junct_or JUNCT_SUBCHAIN+ sym_end_paren ;
JUNCT_SUBCHAIN: sym_open_paren CHAIN_BODY sym_end_paren ;
FIRST: kw_first ;

FILTER: FILTER_EXISTS | FILTER_NOT_EXISTS | FILTER_JUNCT_AND | FILTER_JUNCT_OR ;
FILTER_EXISTS: sym_open_exist CHAIN_BODY FILTER_SUFFIX? sym_end_paren ;
FILTER_NOT_EXISTS: sym_open_not_exist CHAIN_BODY FILTER_SUFFIX? sym_end_paren ;
FILTER_SUFFIX: FILTER_SUFFIX_SIMPLE | FILTER_SUFFIX_LIKE ;
FILTER_SUFFIX_SIMPLE: FILTER_OP VAL ;
FILTER_SUFFIX_LIKE: sym_op_like STR_VAL ;
FILTER_OP: sym_op_eq | sym_op_neq | sym_op_gt | sym_op_gte | sym_op_lt | sym_op_lte ;
FILTER_JUNCT_AND: sym_open_junct_and FILTER+ sym_end_paren ;
FILTER_JUNCT_OR: sym_open_junct_or FILTER+ sym_end_paren ;

CHAIN_ACTION: CHAIN_ACTION_SELECT | CHAIN_ACTION_SUBCHAIN ;
CHAIN_ACTION_SELECT: sym_select ident ;
CHAIN_ACTION_SUBCHAIN: sym_open_paren CHAIN sym_end_paren ;

SORT_PAIR: SORT_PAIR_ASC | SORT_PAIR_DESC ;
SORT_PAIR_ASC: kw_asc ident ;
SORT_PAIR_DESC: kw_desc ident ;

STR_VAL: str_ ;
VAL: str_ | num | true_ | false_ | null | json | param;

terminals

kw_search: "search";
kw_first: "first";
kw_asc: "asc";
kw_desc: "desc";

sym_select: "=>";
sym_move_down: "->";
sym_move_up: "<-";
sym_open_recurse: "*(";
sym_open_junct_and: "&(";
sym_open_junct_or: "|(";
sym_open_exist: "?(";
sym_open_not_exist: "!(";
sym_open_paren: "(";
sym_end_paren: ")";
sym_open_curly: "{";
sym_end_curly: "}";
sym_op_eq: "==";
sym_op_neq: "!=";
sym_op_gt: ">";
sym_op_gte: ">=";
sym_op_lt: "<";
sym_op_lte: "<=";
sym_op_like: "~=";

num: /-?\d+(.\d+)?/;
str_: /"([^"\\]|\\["\\bnfrt]|u[a-fA-F0-9]{4})*"/;
true_: 'true';
false_: 'false';
null: 'null';
json: /v(#+).*?(\2)/;

param: /[$][a-zA-Z_][a-zA-Z0-9_-]*/;
ident: /[a-zA-Z_][a-zA-Z0-9_-]*/;